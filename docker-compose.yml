version: "3.7"
services:
  proxy:
    container_name: traefik
    image: traefik:v2.2
    networks:
      - traefik-public
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Disable Docker Swarm mode for local development
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
      - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80

  mongodb:
    image: bitnami/mongodb:latest
    container_name: mongodb
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u root -p $MONGODB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - default

  newelasticsearch:
    image: elasticsearch:8.2.2
    environment:
      - xpack.security.enabled=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - ELASTIC_USERNAME
      - ELASTIC_PASSWORD
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - traefik-public
    volumes:
      - newelasticsearch-data:/usr/share/elasticsearch/data
      - newelasticsearch-config:/usr/share/elasticsearch/config
    ports:
      - "9200:9200"
      - "9300:9300"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  augmenterservice:
    build: .
    restart: always
    container_name: augmenterservice
    volumes:
      - ".:/app"
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_URL=http://newelasticsearch:9200
      - SURVEYINTERLINK_URL=http://${DOMAIN}/surveymod
      - AUTHINTERLINK_URL=http://${DOMAIN}/auth
      - HOST=0.0.0.0
      - VIRTUAL_HOST=servicepedia.${DOMAIN?Variable not set}
      - PORT=${PORT_SERVICEPEDIA}
      - PROTOCOL=http://
      - BASE_PATH=

    depends_on:
      - newelasticsearch
      - auth

    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-augmenterservice.loadbalancer.server.port=${PORT_SERVICEPEDIA}
      - traefik.http.routers.${STACK_NAME?Variable not set}-augmenterservice.rule=Host(`${DOMAIN}`)
    command: gunicorn --reload --log-level critical  --bind 0.0.0.0:${PORT_SERVICEPEDIA} --workers 1 --threads 100  "app.main:create_app()" --preload

  # Auth Service
  auth:
    image: interlinkproject/backend-auth:${AUTH_VERSION}
    container_name: ${STACK_NAME}-auth
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/auth
      - PROTOCOL=http://
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=users
      - CLIENT_SECRET=${CLIENT_SECRET}
      - SERVER_METADATA_URL=https://aac.platform.smartcommunitylab.it/.well-known/openid-configuration
      - SERVER_URL=https://aac.platform.smartcommunitylab.it
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-auth.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${STACK_NAME?Variable not set}-auth.rule=Host(`${DOMAIN}`) && PathPrefix(`/auth`)
    networks:
      - traefik-public
      - default

  logging:
    image: interlinkproject/backend-logging:master
    container_name: ${STACK_NAME}-logging
    env_file:
      - ./.env
    environment:
      - ELASTIC_HOST
      - ELASTIC_PORT
      - ELASTIC_USERNAME
      - ELASTIC_PASSWORD
      - DOMAIN=${DOMAIN}
      - PORT=${PORT}
      - BASE_PATH=/logging
      - TZ=${TZ}
      - WAITFORIT_TIMEOUT=120
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${STACK_NAME}-logging.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${STACK_NAME}-logging.entrypoints=websecure
      - traefik.http.routers.${STACK_NAME}-logging.tls.certresolver=letsencrypt
      - traefik.http.routers.${STACK_NAME}-logging.tls=true
      - traefik.http.routers.${STACK_NAME}-logging.rule=Host(`${DOMAIN}`) && PathPrefix(`/logging`)
      - traefik.http.routers.${STACK_NAME}-logging.middlewares=logging-stripprefix
      - traefik.http.middlewares.logging-stripprefix.stripprefix.prefixes=/logging
    restart: on-failure
    networks:
      - traefik-public
      - default
    command: "wait-for-it --service ${ELASTIC_HOST}:${ELASTIC_PORT} -- uvicorn main:app --reload --host 0.0.0.0 --port ${PORT}"
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

volumes:
  newelasticsearch-data:
    driver: local
  newelasticsearch-config:
    driver: local
  mongodb-data:
    driver: local

networks:
  traefik-public:
  default:
